[project]
name = "agno-starter"
version = "0.1.0"
description = "A beginner-friendly AI agent demonstrating Agno framework capabilities with HackerNews analysis"
authors = [
    {name = "Arindam Majumder", email = "arindammajumder2020@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["ai", "agent", "agno", "hackernews", "analysis", "starter"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Education",
]

dependencies = [
    # Core AI frameworks - pin major versions for stability
    "agno>=1.5.1,<2.0.0",
    "openai>=1.78.1,<2.0.0",
    
    # MCP for tool integration
    "mcp>=1.8.1,<2.0.0",
    
    # Utilities - pin to compatible ranges
    "python-dotenv>=1.1.0,<2.0.0",
    "requests>=2.31.0,<3.0.0",
    "pytz>=2023.3,<2025.0",
]

[project.optional-dependencies]
dev = [
    # Code formatting and linting
    "black>=23.9.1",
    "ruff>=0.1.0",
    "isort>=5.12.0",
    
    # Type checking
    "mypy>=1.5.1",
    "types-requests>=2.31.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
]

[project.urls]
Homepage = "https://github.com/Arindam200/awesome-ai-apps"
Repository = "https://github.com/Arindam200/awesome-ai-apps"
Issues = "https://github.com/Arindam200/awesome-ai-apps/issues"
Documentation = "https://github.com/Arindam200/awesome-ai-apps/tree/main/starter_ai_agents/agno_starter"

[project.scripts]
agno-starter = "main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\\.pyi?$'
extend-exclude = '''
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]